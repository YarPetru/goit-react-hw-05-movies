{"version":3,"file":"static/js/665.bb079926.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MovieDetails/AdditionalInfo.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import { SpinnerDotted } from 'spinners-react';\n\nconst Loader = () => {\n  //   const color = '#ffffff';\n  return <SpinnerDotted color=\"red\" />;\n};\n\nexport default Loader;\n","import { Link, useParams } from 'react-router-dom';\n\nconst AdditionalInfo = () => {\n  const { movieId } = useParams();\n\n  return (\n    <>\n      <h2>Additional Info</h2>\n      <ul>\n        <li>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n        </li>\n        <li>\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default AdditionalInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieInfoContainer\":\"MovieDetails_movieInfoContainer__0GHa4\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"title\":\"MovieDetails_title__RBndM\",\"termsList\":\"MovieDetails_termsList__0roZU\",\"term\":\"MovieDetails_term__qhlab\",\"definition\":\"MovieDetails_definition__lJu9M\"};","import { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n// import toast from 'react-hot-toast';\n\nimport { getMovieDetails } from '../../services/api';\nimport AdditionalInfo from './AdditionalInfo';\nimport Loader from '../Loader';\nimport s from './MovieDetails.module.css';\n\nconst useMovieDetails = () => {\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setStatus('pending');\n        const movie = await getMovieDetails(movieId);\n        setMovie(movie);\n        // console.log(movie);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n  return { status, error, movie };\n};\n\nconst MovieDetails = () => {\n  const { status, error, movie } = useMovieDetails();\n  const { movieId } = useParams();\n  //   const releaseYear = movie.release_date.split('-')[0];\n\n  return (\n    <>\n      <Link to=\"/\">На главную</Link>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && (\n        <p>{`There are no movies with id ${movieId}. Error: ${error}`}</p>\n      )}\n      {status === 'resolved' && (\n        <>\n          <div className={s.movieInfoContainer}>\n            <img\n              className={s.poster}\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                  : 'https://usfa.gov.ua/upload/media/2021/02/12/6026697741202-602643405e0e780013efe006.jpg'\n              }\n              alt=\"poster\"\n              width=\"300px\"\n            />\n\n            <dl className={s.termsList}>\n              <h2 className={s.title}>{movie.title}</h2>\n              <dt className={s.term}>Year:</dt>\n              <dd className={s.definition}>\n                {movie.release_date.split('-')[0]}\n              </dd>\n              <dt className={s.term}>Overview:</dt>\n              <dd className={s.definition}>{movie.overview}</dd>\n              <dt className={s.term}>Genres:</dt>\n              <dd className={s.definition}>\n                {movie.genres.map(genre => genre.name).join(', ')}\n              </dd>\n              <dt className={s.term}>User score:</dt>\n              <dd className={s.definition}>{movie.vote_average}</dd>\n            </dl>\n          </div>\n          <hr />\n\n          <AdditionalInfo />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { Outlet } from 'react-router-dom';\nimport MovieDetails from 'components/MovieDetails';\n\nexport function MovieDetailsPage() {\n  return (\n    <>\n      <MovieDetails />\n      <Outlet />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst APIKey = '9cba2b56fa6de0f8781209edaebd8957';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//https://api.themoviedb.org/3/trending/movie/day?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${APIKey}`);\n  return response.data.results;\n};\n\n//https://api.themoviedb.org/3/search/movie?api_key=9cba2b56fa6de0f8781209edaebd8957&query=batman\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${APIKey}&query=${query}`\n  );\n  return response.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/54657?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieDetails = async movieid => {\n  const response = await axios.get(`/movie/${movieid}?api_key=${APIKey}`);\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/453395/credits?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieCredits = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/credits?api_key=${APIKey}`\n  );\n  return response.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/453395/reviews?api_key=9cba2b56fa6de0f8781209edaebd8957\n\nexport const getMovieReviews = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/reviews?api_key=${APIKey}`\n  );\n  return response.data.results;\n};\n"],"names":["SpinnerDotted","color","movieId","useParams","to","useState","status","setStatus","error","setError","movie","setMovie","useEffect","fetchMovieDetails","getMovieDetails","useMovieDetails","Loader","className","s","src","poster_path","alt","width","title","release_date","split","overview","genres","map","genre","name","join","vote_average","MovieDetailsPage","APIKey","axios","getTrendMovies","response","data","results","getMovieByQuery","query","movieid","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}