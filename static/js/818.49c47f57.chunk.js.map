{"version":3,"file":"static/js/818.49c47f57.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/Movies/Movies.module.css","components/Movies/Movies.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import { SpinnerDotted } from 'spinners-react';\n\nconst Loader = () => {\n  //   const color = '#ffffff';\n  return <SpinnerDotted —Åolor=\"black\" />;\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect, useState } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { FcSearch } from 'react-icons/fc';\nimport toast from 'react-hot-toast';\n\nimport { getMovieByQuery } from 'services/api';\nimport s from './Movies.module.css';\nimport Loader from '../Loader';\n\n// Query Function\nconst GetSearchedMovie = q => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      try {\n        setStatus('pending');\n        const movies = await getMovieByQuery(q);\n        setMovies(movies);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error);\n      }\n    };\n    if (!!q) {\n      fetchMovieByQuery();\n    }\n  }, [q]);\n  return { movies, status, error };\n};\n\n// common func for page - need to be devided\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryWord = searchParams.get('q');\n  const { movies, status, error } = GetSearchedMovie(queryWord);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return toast('Enter your query please', {\n        icon: 'üòì',\n        style: {\n          borderRadius: '10px',\n          background: '#333',\n          color: '#fff',\n        },\n      });\n    }\n    setSearchParams({ q: query });\n    setQuery('');\n  };\n\n  const handleInputChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.buttonLabel}>Search</span>\n          <FcSearch />\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleInputChange}\n        />\n      </form>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' &&\n        toast(\n          `Oops. Something went wrong. Please try again. ${error.message}`,\n          {\n            icon: 'üòì',\n            style: {\n              borderRadius: '10px',\n              background: '#333',\n              color: '#fff',\n            },\n          }\n        )}\n      {status === 'resolved' && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id} className=\"movieItem\">\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import Movies from '../components/Movies';\n\nexport function MoviesPage() {\n  //// —Ç—É—Ç –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞\n  return <Movies />;\n}\n","import axios from 'axios';\n\nconst APIKey = '9cba2b56fa6de0f8781209edaebd8957';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//https://api.themoviedb.org/3/trending/movie/day?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${APIKey}`);\n  return response.data.results;\n};\n\n//https://api.themoviedb.org/3/search/movie?api_key=9cba2b56fa6de0f8781209edaebd8957&query=batman\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${APIKey}&query=${query}`\n  );\n  return response.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/54657?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieDetails = async movieid => {\n  const response = await axios.get(`/movie/${movieid}?api_key=${APIKey}`);\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/453395/credits?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieCredits = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/credits?api_key=${APIKey}`\n  );\n  return response.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/453395/reviews?api_key=9cba2b56fa6de0f8781209edaebd8957\n\nexport const getMovieReviews = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/reviews?api_key=${APIKey}`\n  );\n  return response.data.results;\n};\n"],"names":["SpinnerDotted","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","q","movies","setMovies","status","setStatus","error","setError","useEffect","fetchMovieByQuery","getMovieByQuery","GetSearchedMovie","get","className","s","onSubmit","e","preventDefault","trim","toast","icon","style","borderRadius","background","color","type","autoComplete","value","autoFocus","placeholder","onChange","currentTarget","toLowerCase","Loader","message","map","movie","to","id","title","MoviesPage","APIKey","axios","getTrendMovies","response","data","results","getMovieDetails","movieid","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}